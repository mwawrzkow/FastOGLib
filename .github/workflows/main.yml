name: DocGen/CodeTest/Build

on: 
  push: 
    branches: [ main ]
  pull_request: 
    branches: [ main ]

jobs: 
  build-for-linux: 
    runs-on: ubuntu-latest

    steps: 
      - uses: actions/checkout@v2

      - name: Install cppcheck
        run: sudo apt-get install cppcheck
      - name: Run cppcheck and save results to file
        run: cppcheck . --xml 2>result.xml
      - name: Generate report folder
        run: mkdir report
      - name: generate report
        run: cppcheck-htmlreport --file=result.xml --report-dir=report
      - name: compress report
        run: tar -czvf result.tar.gz report/ 
      - name: Generate documentation
        run: | 
          sudo apt-get install graphviz doxygen 
          doxygen       
          ls -la 
          tar -czvf html.tar.gz html/
          tar -czvf latex.tar.gz latex/
      - name: Installing TZData
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata
      - name: Installing X11 drivers
        run: export TZ="America/New_York" && export DEBIAN_FRONTEND="noninteractive" && sudo apt-get update && sudo apt install -y xorg-dev libglu1-mesa mesa-opencl-icd libgl1-mesa-dev xsltproc libglfw3-dev libglu1-mesa-dev xvfb libxinerama1 libxcursor1
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. 
      - name: build project
        run: cd build && make
      - name: Upload to output Directory
        run: mkdir output && mv result.tar.gz output/result.tar.gz &&  mv latex.tar.gz output/latex.tar.gz && mv html.tar.gz output/html.tar.gz
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3          
        with:
          name: cppcheck-result
          path: output/result.tar.gz
      - name: Archive html documentation
        uses: actions/upload-artifact@v3          
        with:
          name: doc_html
          path: output/html.tar.gz
      - name: Archive latex documentation
        uses: actions/upload-artifact@v3          
        with:
          name: doc_latex
          path: output/latex.tar.gz
          
  build-for-macos: 
    runs-on: macos-latest

    steps: 
      - uses: actions/checkout@v2
      
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. 
      - name: build project
        run: cd build && make
  build-for-windows: 
    runs-on: windows-latest

    steps: 
      - uses: actions/checkout@v2
      
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. -G "MinGW Makefiles"  
      - name: build project
        run: cd build && make
  update-docs-on-branch: 
      runs-on: ubuntu-latest
      needs: [build-for-windows, build-for-macos, build-for-linux]
      
      steps: 
        - uses: actions/checkout@v2 
        - name: ensure that directories exists and are empty
          run: mkdir -p docs/html docs/latex/ docs/audit && rm -rf docs/html/* docs/latex/* docs/checks/*
        - name: Download HTML docs
          uses: aochmann/actions-download-artifact@1.0.4
          with:
            name: doc_html
            latest: true
            path: docs/html/
        - name: unzip HTML docs 
          run: cd docs/html/ && tar -xvzf html.tar.gz && rm html.tar.gz
        - name: Download Latex docs
          uses: aochmann/actions-download-artifact@1.0.4
          with:
            name: doc_latex
            latest: true
            path: docs/latex/
        - name: unzip Latex docs 
          run: cd docs/latex/ && tar -xvzf latex.tar.gz && rm latex.tar.gz
        - name: build PDF file
          run: sudo apt-get install doxygen-latex && cd docs/latex/latex/ && make 
        - name: move pdf file to latex directory and remove sources
          run: mv docs/latex/latex/refman.pdf docs/latex/ && rm -rf docs/latex/latex
        - name: Download audit docs
          uses: aochmann/actions-download-artifact@1.0.4
          with:
            name: result
            latest: true
            path: docs/audit
        - name: unzip audit 
          run: cd docs/audit/ && tar -xvzf result.tar.gz && rm result.tar.gz
        - name: list all files in docs
          run: ls -LR docs/

      
      
      
      
      
      
