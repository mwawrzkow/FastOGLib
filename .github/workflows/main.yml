name: Veryfi build, and perform static code analysis

on: 
  push: 
    branches: [ main ]
  pull_request: 
    branches: [ main ]

jobs: 
  build-for-linux: 
    runs-on: ubuntu-latest

    steps: 
      - uses: actions/checkout@v2

      - name: Install cppcheck
        run: sudo apt-get install cppcheck
      - name: Run cppcheck and save results to file
        run: cppcheck . --xml 2>result.xml
      - name: Generate report folder
        run: mkdir report
      - name: generate report
        run: cppcheck-htmlreport --file=result.xml --report-dir=report
      - name: compress report
        run: tar -czvf result.tar.gz report/ 
#       - name: Print out all warnings
#         run: cat result.txt
      - name: Generate documentation
        run: | 
          sudo apt-get install graphviz doxygen 
          doxygen -g 
          doxygen       
          tar -czfv html.tar.gz html
          tar -czfv latex.tar.gz latex
      - name: Installing TZData
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata
      - name: Installing X11 drivers
        run: export TZ="America/New_York" && export DEBIAN_FRONTEND="noninteractive" && sudo apt-get update && sudo apt install -y xorg-dev libglu1-mesa mesa-opencl-icd libgl1-mesa-dev xsltproc libglfw3-dev libglu1-mesa-dev xvfb libxinerama1 libxcursor1
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. 
      - name: build project
        run: cd build && make
      - name: Upload to output Directory
        run: mkdir output && mv result.tar.gz output/result.tar.gz &&  mv latex.tar.gz output/latex.tar.gz && mv html.tar.gz output/html.tar.gz
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3          
        with:
          name: cppcheck-result
          path: output/result.tar.gz
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3          
        with:
          name: doc_html
          path: output/html.tar.gz
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3          
        with:
          name: doc_latex
          path: output/latex.tar.gz
          
  build-for-macos: 
    runs-on: macos-latest

    steps: 
      - uses: actions/checkout@v2
      
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. 
      - name: build project
        run: cd build && make
  build-for-windows: 
    runs-on: windows-latest

    steps: 
      - uses: actions/checkout@v2
      
      - name: update submodules 
        run: git submodule sync && git submodule update --init
      - name: Create 'build' directory
        run: mkdir build
      - name: run cmake configuration
        run: cd build && cmake .. -G "MinGW Makefiles"  
      - name: build project
        run: cd build && make
